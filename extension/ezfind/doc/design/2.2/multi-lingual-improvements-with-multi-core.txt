=========================================================
Multi-lingual improvements with multiple cores
=========================================================

:Author:   Paul Borgermans, Bertrand Dunogier
:Version: 1.0 draft
:Revision: $Rev$
:Date: $Date$

.. sectnum::
.. contents::
.. NOTE : for a better reading experience, convert me to HTML with rst2html.

Introduction
============

Until eZ Find 2.1, a signle schema is used which is non optimal for
multi-lingual sites as every language needs to have its dedicated language dependent
analyzer filters

With support for multiple cores, this problem can easily tackled as each core (index)
has its own schema.xml file, optimized per language


Related issues
==============

* OsloBors project (urgent)
* ... (TBS)

On the fly refactoring: aggregator fields
=========================================

Define more aggregator fields and make them configurable in ezfind.ini

This speeds up searching in general and allows for multi-core searching with
possible different information sources


Details
=======

solr.ini multi-core definitions
-------------------------------

MultiCore=yes|no

Thsi means the base url becomes the multi-core base url, this is not yet the
instance itself

Cores[]
Cores[identifier]=<url suffix>
....

ezfind.ini language mappings
----------------------------

in section [LanguageSearch]

Adding

UseMultiCore=yes|no

LanguageMapCores[]
LanguageMapCores[identifier]=eng-GB
....

API changes
-----------

* eZSolr
* Querybuilder
* fetch functions
* ...

Searching over multiple cores
-----------------------------
Since each core will store its own data per language, we need select operations
to use all the cores at the same time, while maintaining language priority search

Searching has to be made using sharding; the request is sent to one core, but
instructs it to shard it to other cores::

    http://host:8983/solr/core0/select?shards=host:8983/solr/core0,host:8983/solr/core1&q=...
    
